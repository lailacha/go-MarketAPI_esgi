// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"


const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/createPayement": {
            "post": {
                "description": "CreatePayement godoc",
                "summary": "CreatePayement",
                "operationId": "CreatePayement",
                "tags": [
                    "Payement"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "body for Payement",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Payement"
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Payement"
                        }
                    "400": {
                        "description": "Bad Request"
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    "500": {
                        "description": "Internal Server Error"
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
        "/deletePayement/{id}": {
            "delete": {
                "description": "DeletePayement godoc",
                "summary": "DeletePayement",
                "operationId": "DeletePayement",
                "tags": [
                    "Payement"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id to delete",
                        "required": true,
                        "type": "string"
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Payement"
                        }
                    "400": {
                        "description": "Bad Request"
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    "500": {
                        "description": "Internal Server Error"
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
        "/getPayement/{id}": {
            "get": {
                "description": "GetPayement godoc",
                "summary": "GetPayement",
                "operationId": "GetPayement",
                "tags": [
                    "Payement"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id to get",
                        "required": true,
                        "type": "string"
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Payement"
                        }
                    "400": {
                        "description": "Bad Request"
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    "500": {
                        "description": "Internal Server Error"
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
        "/getPayements": {
            "get": {
                "description": "GetPayements godoc",
                "summary": "GetPayements",
                "operationId": "GetPayements",
                "tags": [
                    "Payement"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page to get",
                        "required": true,
                        "type": "string"
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit to get",
                        "required": true,
                        "type": "string"
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Payement"
                        }
                    "400": {
                        "description": "Bad Request"
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    "500": {
                        "description": "Internal Server Error"
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
        "/updatePayement": {
            "put": {
                "description": "UpdatePayement godoc",
                "summary": "UpdatePayement",
                "operationId": "UpdatePayement",
                "tags": [
                    "Payement"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "body for Payement",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Payement"
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Payement"
                        }
                    "400": {
                        "description": "Bad Request"
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    "500": {
                        "description": "Internal Server Error"
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                        

        "/createProduct": {
            "post": {
                "description": "CreateProduct godoc",
                "summary": "CreateProduct",
                "operationId": "CreateProduct",
                "tags": [
                    "Product"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "body for Product",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Product"
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    "400": {
                        "description": "Bad Request"
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    "500": {
                        "description": "Internal Server Error"
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
        "/deleteProduct/{id}": {
            "delete": {
                "description": "DeleteProduct godoc",
                "summary": "DeleteProduct",
                "operationId": "DeleteProduct",
                "tags": [
                    "Product"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id to delete",
                        "required": true,
                        "type": "string"
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    "400": {
                        "description": "Bad Request"
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    "500": {
                        "description": "Internal Server Error"
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
        "/getProduct/{id}": {
            "get": {
                "description": "GetProduct godoc",
                "summary": "GetProduct",
                "operationId": "GetProduct",
                "tags": [
                    "Product"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id to get",
                        "required": true,
                        "type": "string"
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    "400": {
                        "description": "Bad Request"
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    "500": {
                        "description": "Internal Server Error"
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
        "/getProducts": {
            "get": {
                "description": "GetProducts godoc",
                "summary": "GetProducts",
                "operationId": "GetProducts",
                "tags": [
                    "Product"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page to get",
                        "required": true,
                        "type": "string"
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit to get",
                        "required": true,
                        "type": "string"
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    "400": {
                        "description": "Bad Request"
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    "500": {
                        "description": "Internal Server Error"
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
        "/updateProduct": {
            "put": {
                "description": "UpdateProduct godoc",
                "summary": "UpdateProduct",
                "operationId": "UpdateProduct",
                "tags": [
                    "Product"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "body for Product",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Product"
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    "400": {
                        "description": "Bad Request"
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    "500": {
                        "description": "Internal Server Error"
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
    }
    "definitions": {
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                "message": {
                    "type": "string"
                }
            }
        }
        "Product": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                }
                "name": {
                    "type": "string"
                }
                "price": {
                    "type": "string"
                }
                "created_at": {
                    "type": "string"
                }
                "updated_at": {
                    "type": "string"
                }
            }
        }
        "Payement": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                }
                "product_id": {
                    "type": "integer",
                }
                "price_paid": {
                    "type": "string"
                }
                "created_at": {
                    "type": "string"
                }
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }


}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
